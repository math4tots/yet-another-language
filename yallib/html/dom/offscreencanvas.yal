from './mixin/drawimagesource' import DrawImageSource
from './offscreencanvasrenderingcontext2d' import OffscreenCanvasRenderingContext2D
from './webglrenderingcontext' import WebGLRenderingContext

enum String2D {
  const value = "2d"
}

enum StringWebGL {
  const value = "webgl"
}


export interface OffscreenCanvas extends DrawImageSource {
  const __marker_OffscreenCanvas: Any


  function get2DContext(contextType: String2D = "2d"): OffscreenCanvasRenderingContext2D {
    """
    https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas/getContext

    Calls canvas.getContext() to get the 2D rendering context.
    The default parameter automatically passes "2d" to the method to get the correct
    context type.
    """
    aliasFor(__js_getContext)
  }

  function getWebGLContext(contextType: StringWebGL = "webgl"): WebGLRenderingContext? {
    """
    https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas/getContext

    Calls canvas.getContext() to get a WebGL rendering context.
    The default parameter automatically passes "webgl" to the method to get the correct
    context type.
    """
    aliasFor(__js_getContext)
  }
}
