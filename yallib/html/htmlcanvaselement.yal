from './htmlelement' import HTMLElement
from './canvasrenderingcontext2d' import CanvasRenderingContext2D
from './webglrenderingcontext' import WebGLRenderingContext

enum String2D {
  const value = "2d"
}

enum StringWebGL {
  const value = "webgl"
}

export interface HTMLCanvasElement extends HTMLElement {
  """
  https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement

  The HTMLCanvasElement interface provides properties and methods for manipulating the layout
  and presentation of <canvas> elements. The HTMLCanvasElement interface also inherits the
  properties and methods of the HTMLElement interface.
  """

  var height: Number """
    The height HTML attribute of the <canvas> element is a non-negative integer reflecting the number
    of logical pixels (or RGBA values) going down one column of the canvas. When the attribute is
    not specified, or if it is set to an invalid value, like a negative, the default value of 150 is used.
    If no [separate] CSS height is assigned to the <canvas>, then this value will also be used as the
    height of the canvas in the length-unit CSS Pixel.
    """ = aliasFor(__js_height)

  var width: Number """
    The width HTML attribute of the <canvas> element is a non-negative integer reflecting the number of
    logical pixels (or RGBA values) going across one row of the canvas. When the attribute is not specified,
    or if it is set to an invalid value, like a negative, the default value of 300 is used.
    If no [separate] CSS width is assigned to the <canvas>, then this value will also be used as the
    width of the canvas in the length-unit CSS Pixel.
    """= aliasFor(__js_width)

  function get2DContext(contextType: String2D = "2d"): CanvasRenderingContext2D {
    """
    https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext

    Calls canvas.getContext() to get the 2D rendering context.
    The default parameter automatically passes "2d" to the method to get the correct
    context type.
    """
    aliasFor(__js_getContext)
  }

  function getWebGLContext(contextType: StringWebGL = "webgl"): WebGLRenderingContext? {
    """
    https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext

    Calls canvas.getContext() to get a WebGL rendering context.
    The default parameter automatically passes "webgl" to the method to get the correct
    context type.
    """
    aliasFor(__js_getContext)
  }
}
